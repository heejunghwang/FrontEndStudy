== 1. const, let vs var

[TIP] 
[ Javascript Hoisting ] +
후선언된 변수나, 함수들이 해당 Scope에서 최상위에 위치하는 현상 +
자바스크립트에서는 var 선언문 전에 변수를 사용해도 이미 선언된 것으로 간주한다. +
이런 동작 방식을 "호이스팅"(hoisting)이라고 한다. +

* var : Hosting 적용됨
[source,javascript]
console.log(test1);
var test1; //undefined

* const
[source,javascript]
console.log(PI);
const PI; //error

** 특징
재선언 시에 에러가 발생
변수 재할당(reassign) 할 수 없음
[source,javascript]
const bar = [];
bar.push('abc'); // OK, the array is mutable

*** 참고 : 참조 변수도 변경하고 싶지 않을 때
 const EMPTY_ARRAY = Object.freeze([]);

* let
재선언 시에 에러가 발생
[source,javascript]
console.log(test3);
let test3; //error

** 특징
변수 재할당(reassign) 할 수 있음(변수를 변경할 때 (mutate a variable) 사용하는 것이 좋다)+
예: 반복문
[source,javascript]
let foo = 'abc';
foo = 'def';
console.log(foo); // def
